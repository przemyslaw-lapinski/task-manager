Mutation:
    type: object
    config:
        description: "Root mutation"
        fields:
            ping:
                type: "String!"
                resolve: '@=call("App\\UI\\GraphQL\\Resolver\\MutationResolver::ping")'

            reverse:
                type: "String!"
                args:
                    input: "String!"
                resolve: '@=service("App\\UI\\GraphQL\\Resolver\\MutationResolver").reverse(args["input"])'

            createTask:
                type: "ID!"
                args:
                    title: "String!"
                    description: "String!"
                    assignedUserId: "ID!"
                resolve: '@=service("App\\UI\\GraphQL\\Resolver\\TaskMutationResolver").createTask(args)'

            changeTaskStatus:
                type: "Boolean!"
                args:
                    taskId: "ID!"
                    toStatus: "TaskStatus!"
                resolve: '@=service("App\\UI\\GraphQL\\Resolver\\TaskMutationResolver").changeStatus(args)'
